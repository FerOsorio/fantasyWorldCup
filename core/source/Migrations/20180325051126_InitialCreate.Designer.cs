// <auto-generated />
using FantasyWorldCup.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace FantasyWorldCup.Core.Migrations
{
    [DbContext(typeof(TournamentContext))]
    [Migration("20180325051126_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("FantasyWorldCup.Core.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LocalId");

                    b.Property<int>("LocalTeamScore");

                    b.Property<int>("Status");

                    b.Property<int?>("TournamentId");

                    b.Property<string>("VisitorId");

                    b.Property<int>("VisitorTeamScore");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("TournamentId");

                    b.HasIndex("VisitorId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("FantasyWorldCup.Core.Models.Team", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("FantasyWorldCup.Core.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("FantasyWorldCup.Core.Models.Match", b =>
                {
                    b.HasOne("FantasyWorldCup.Core.Models.Team", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId");

                    b.HasOne("FantasyWorldCup.Core.Models.Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId");

                    b.HasOne("FantasyWorldCup.Core.Models.Team", "Visitor")
                        .WithMany()
                        .HasForeignKey("VisitorId");
                });
#pragma warning restore 612, 618
        }
    }
}
